{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nazar\\\\Desktop\\\\lb10\\\\simple-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Expenses from './components/Expenses';\nimport NewExpense from './components/NewExpense';\nimport ExpensesFilter from './components/ExpensesFilter';\nimport Chart from './components/Chart';\nimport Loader from './components/Loader';\nimport { getExpenses, addExpense } from './expenseService';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [filteredYear, setFilteredYear] = useState('2021');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      setLoading(true);\n      try {\n        const expensesData = await getExpenses();\n        setExpenses(expensesData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching expenses: ', error);\n        setLoading(false);\n      }\n    };\n    fetchExpenses();\n  }, []);\n  const addExpenseHandler = async expense => {\n    try {\n      await addExpense(expense);\n      setExpenses(prevExpenses => [expense, ...prevExpenses]);\n    } catch (error) {\n      console.error('Error adding expense: ', error);\n    }\n  };\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const allExpenses = expenses.filter(expense => {\n    return new Date(expense.date).getFullYear().toString() === filteredYear;\n  });\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of allExpenses) {\n    const expenseMonth = new Date(expense.date).getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(Expenses, {\n      items: allExpenses,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        dataPoints: chartDataPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9TdlGBRcWqjUWtXDGFiGY/0LuQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Expenses","NewExpense","ExpensesFilter","Chart","Loader","getExpenses","addExpense","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","filteredYear","setFilteredYear","loading","setLoading","fetchExpenses","expensesData","error","console","addExpenseHandler","expense","prevExpenses","filterChangeHandler","selectedYear","allExpenses","filter","Date","date","getFullYear","toString","chartDataPoints","label","value","expenseMonth","getMonth","amount","className","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChangeFilter","items","dataPoints","_c","$RefreshReg$"],"sources":["C:/Users/Nazar/Desktop/lb10/simple-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Expenses from './components/Expenses';\nimport NewExpense from './components/NewExpense';\nimport ExpensesFilter from './components/ExpensesFilter';\nimport Chart from './components/Chart';\nimport Loader from './components/Loader';\nimport { getExpenses, addExpense } from './expenseService';\nimport './App.css';\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [filteredYear, setFilteredYear] = useState('2021');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      setLoading(true);\n      try {\n        const expensesData = await getExpenses();\n        setExpenses(expensesData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching expenses: ', error);\n        setLoading(false);\n      }\n    };\n\n    fetchExpenses();\n  }, []);\n\n  const addExpenseHandler = async (expense) => {\n    try {\n      await addExpense(expense);\n      setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n    } catch (error) {\n      console.error('Error adding expense: ', error);\n    }\n  };\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const allExpenses = expenses.filter((expense) => {\n    return new Date(expense.date).getFullYear().toString() === filteredYear;\n  });\n\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of allExpenses) {\n    const expenseMonth = new Date(expense.date).getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n      {loading ? <Loader /> : null}\n      <Expenses items={allExpenses} >\n      <Chart dataPoints={chartDataPoints} />\n      </Expenses>\n      \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}